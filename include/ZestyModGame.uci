//SetGameType returns which game mode should be used for which map prefix
//You can do whatever you want with this. You can even use Options
// (options => the ?blah=blah things added after the map name when launching a server or in the map list)
//to add even more variety. See the ParseOption function in Src\Engine\Classes\GameInfo.uc
var config array<GameTypePrefix>	SDKPrefixes;

static event class<GameInfo> SetGameType(string MapName, string Options, string Portal)
{
    local string ThisMapPrefix;
    local int i,pos;
    local class<GameInfo> NewGameType;

    LogAlwaysInternal("SetGameType is being called on"@default.Class);

    MapName = StripPlayOnPrefix( MapName );

    // replace self with appropriate gametype if no game specified
    pos = InStr(MapName,"-");
    ThisMapPrefix = left(MapName,pos);

    for (i = 0; i < default.SDKPrefixes.length; i++)
    {
        if (default.SDKPrefixes[i].Prefix ~= ThisMapPrefix)
        {
            NewGameType = class<GameInfo>(DynamicLoadObject(default.SDKPrefixes[i].GameType,class'Class'));
            if ( NewGameType != None )
            {
                return NewGameType;
            }
        }
    }

    return super.SetGameType(MapName, Options, Portal);
}


reliable server function S_BroadcastServerMessage(string Message) {
    local AOCPlayerController PC;
    foreach WorldInfo.AllControllers(class'AOCPlayerController', PC)
    {
        PC.ReceiveChatMessage(Message, EFAC_ALL, false, false, , false);
    }
}


// Deprecated
function AdminTournamentMode(bool bEnable){}

reliable server function ConfigureTournamentMode(bool bEnable)
{
    bTournamentMode = bEnable;
    SaveConfig();

    class'AOCGame'.default.bTournamentMode = bEnable;
    class'AOCGame'.static.StaticSaveConfig();
}

exec function TournamentMode(bool bEnable)
{
    if (bTournamentMode == bEnable)
        return;

    S_BroadcastServerMessage("Admin TournamentMode");

    ConfigureTournamentMode(bEnable);
    WorldInfo.ServerTravel("?restart", false);
}


DefaultProperties
{
    PlayerControllerClass=class'`{GAMEMODE}PlayerController'
    DefaultPawnClass=class'`{GAMEMODE}Pawn'

    HUDType=class'`{GAMEMODE}HUD'


    //This is the name that shows in the server browser for this mod:
    ModDisplayString="ZestyMod"

    Families.Empty;

    // do some initialization work here
    Families(ECLASS_Archer)=class'ZestyModFamilyInfo_Agatha_Archer'
    Families(ECLASS_ManAtArms)=class'ZestyModFamilyInfo_Agatha_ManAtArms'
    Families(ECLASS_Vanguard)=class'ZestyModFamilyInfo_Agatha_Vanguard'
    Families(ECLASS_Knight)=class'ZestyModFamilyInfo_Agatha_Knight'
    Families(ECLASS_SiegeEngineer)=class'ZestyModFamilyInfo_Agatha_Archer'

    Families(5)=class'ZestyModFamilyInfo_Mason_Archer'
    Families(6)=class'ZestyModFamilyInfo_Mason_ManAtArms'
    Families(7)=class'ZestyModFamilyInfo_Mason_Vanguard'
    Families(8)=class'ZestyModFamilyInfo_Mason_Knight'
    Families(9)=class'ZestyModFamilyInfo_Mason_Archer'


    MinimumRespawnTime = 10.0f
    bDisableTeamDamagePenalty = true
}
